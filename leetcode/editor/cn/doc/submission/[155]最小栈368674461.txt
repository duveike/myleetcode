class MinStack {

    private Stack<Integer> stack;
    private Stack<Integer> mstack;


    public MinStack() {
        stack = new Stack<>();
        mstack = new Stack<>();
    }
    
    public void push(int val) {
        if(mstack.isEmpty()) {
            mstack.push(val);
        } else {
            mstack.push(Math.min(mstack.peek(),val));
        }
        stack.push(val);
    }
    
    public void pop() {
        mstack.pop();
        stack.pop();
    }
    
    public int top() {
        return stack.peek();
    }
    
    public int getMin() {
        return mstack.peek();

    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(val);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */

//runtime:4 ms
//memory:43.1 MB
